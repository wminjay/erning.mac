set nocompatible

call pathogen#infect()
call pathogen#helptags()

filetype plugin on
filetype indent on

" encoding
set encoding=utf8
set ffs=unix,dos,mac

" files
set nobackup
set nowb
set noswapfile

" syntax highlight color
syntax on

" color schema
if has("gui_running")
    set guioptions=-t
    set background=light
    color solarized
    set guifont=Menlo:h16
    "set guifont=Anonymous\ Pro:h16
    "set guioptions-=T
    map <C-X><C-L> :set background=light<CR> :color solarized<CR>
    map <C-X><C-D> :set background=dark<CR> :color peaksea<CR>
else
    set background=light
    color ron
endif

" incremental search, <C-H> to toggle search highlight
set incsearch
map <silent><C-H> :set hls!<CR>
set ignorecase
set smartcase

" 4 spaces as tab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set smarttab

" makefiles always use tab
autocmd FileType make setlocal noexpandtab

" strip trailing whitespace
function! <SID>StripTrailingWhitespaces()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    %s/\s\+$//e
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction

nnoremap <leader>s :call <SID>StripTrailingWhitespaces()<CR>
autocmd BufWritePre *.py,*.js,*.css :call <SID>StripTrailingWhitespaces()
autocmd BufWritePre *.php :call <SID>StripTrailingWhitespaces()


" indent
set autoindent
set smartindent
set wrap

" line number
set nu
map <C-N><C-N> :set nu!<CR>

" invisible character
nmap <leader>l :set list!<CR>
set listchars=tab:▸-,eol:¬

" Format the statusline
if has("gui_running")
    set laststatus=2
    set statusline=\ %F%m%r%h\ %w\ \ CWD:\ %r%{CurDir()}%h\ \ \ Line:\ %l/%L:%c
    function! CurDir()
        let curdir = substitute(getcwd(), '^/Users/minjiewang', "~", "g")
        return curdir
    endfunction
endif

" Marked.app
:nnoremap <leader>m :silent !open -a Marked.app '%:p'<cr>


" InputMethod problem
set noimd
if has("gui_running")
    set imdisable
    "    set imactivatekey=D-space
    inoremap <ESC> <ESC>:set iminsert=1<CR>
endif

" identation emulate
nmap <D-[> <<
nmap <D-]> >>
vmap <D-[> <gv
vmap <D-]> >gv
